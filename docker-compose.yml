version: '3'
services:
  app_contexto: 
    build: base
    mem_limit: 512m
    ports:
      - "8080:8080"
    environment:
      DB_URL: jdbc:mysql://contexto_invest:3306/prueba?createDatabaseIfNotExist=true&serverTimezone=UTC
      DB_USER_NAME: root
      DB_PASSWORD: 1234
    restart: always
    depends_on:
      contexto_invest:
        condition: service_healthy
    networks:
      - app-network

  contexto_invest:
    image: mysql:8.0.33
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_PASSWORD: 1234
      MYSQL_DATABASE: prueba
    volumes:
      - ./init-scripts:/docker-entrypoint-initdb.d
      - mysql_data:/var/lib/mysql  
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin" , "ping", "-h", "localhost"]
      timeout: 10s
      retries: 10
    networks:
      - app-network

  backup_service:
    image: alpine
    volumes:
      - mysql_data:/data            # Volumen de datos de MySQL
      - ./backups:/backups          # Carpeta que contiene backup.sh 
      - ./logs:/logs                # Mapea el volumen de logs
      - ~/.config/rclone:/root/.config/rclone  # Credenciales de rclone
    entrypoint: ["sh", "-c", "apk add --no-cache rclone && while true; do /backups/backup.sh; sleep 86400; done"]
    restart: always
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
  backup_service:
  logs: # Aseg√∫rate de definir el volumen para logs